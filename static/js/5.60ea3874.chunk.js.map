{"version":3,"file":"static/js/5.60ea3874.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.styled.js","pages/Contacts.jsx","Loader/Loader.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 20px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 20px;\n  font-weight: 600;\n  list-style-type: circle;\n  border-bottom: 1px solid #cccccc;\n  padding-bottom: 10px;\n\n  @media screen and (max-width: 480px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Info = styled.span`\n  display: block;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 70px;\n  height: 25px;\n\n  padding: 10px;\n\n  background-color: #fa0404;\n  color: var(--white);\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  border-radius: 5px;\n  border: none;\n  opacity: 1;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;","export const getContacts = state => state.contacts.items;\n\nexport const getError = state => state.contacts.error;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getFilterValue = state => state.filter.filter;","import {List, Item, Info, Button } from './ContactList.styled';\nimport {deleteContact} from '../../redux/contacts/operations';\nimport {useSelector, useDispatch } from \"react-redux\";\nimport {getContacts, getFilterValue} from '../../redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilterValue);\n\n  const getVisibleContact = () => {\n  const normalizedFilter = filterValue.toLowerCase();\n  \n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n  \n  const visibleContact = getVisibleContact();\n  \n  return (\n    <List>\n        {visibleContact.map(({_id, name, number}) => {\n          return (\n            <Item key={_id}>\n              <Info>{name}: {number}</Info>\n              <Button\n                onClick={() => dispatch(deleteContact(_id))}\n              >\n                Delete\n              </Button>\n            </Item>\n          )\n        })}\n      </List>\n  )\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  font: inherit;\n  border: 2px solid #c1c1c1;\n  padding: 5px 0px 5px 10px;\n  outline: none;\n\n  &:focus {\n    border: 2px solid var(--light-green);\n  }\n\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n  border: none;\n  background-color: var(--light-green);\n  font-size: 16px;\n  font-weight: 500;\n  padding: 10px;\n  color: var(--white);\n  border-radius: 10px;\n  text-transform: uppercase;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  cursor: pointer;\n  outline: none;\n  margin-top: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  &:hover {\n    box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\n    transform: translateX(7px);\n  }\n\n`;","import { addContact } from '../../redux/contacts/operations';\nimport {getContacts} from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const contactsNameCheck = name => {\n    return contacts.filter(contact => contact.name.includes(name));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.target;\n\n    const contactsValue = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    }\n\n    const check = contactsNameCheck(contactsValue.name);\n\n    if (check.length <= 0) {\n      dispatch(addContact(contactsValue));\n    } else (\n      \n      toast.warn(`${contactsValue.name} is already in contacts`, {\n        position: \"top-center\",\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: \"light\",\n      })\n    )\n    \n    form.reset();\n  };\n\n  return (\n  <Form onSubmit={handleSubmit}>\n    <Label>\n      Name\n      <Input\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </Label>\n\n    <Label>\n      Number\n      <Input\n        type=\"text\"\n        placeholder=\"Enter your number\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </Label>\n\n    <Button type=\"submit\">Add contact</Button>\n  </Form>\n)\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  height: 25px;\n  font: inherit;\n  border: 2px solid #c1c1c1;\n  padding: 5px 0px 5px 10px;\n  outline: none;\n\n  &:focus {\n    border: 2px solid var(--light-green);\n  }\n`;","import { useSelector, useDispatch } from 'react-redux';\nimport {Label, Input} from './Filter.styled';\nimport {getFilterValue} from '../../redux/contacts/selectors';\nimport {filterContacts} from '../../redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = (event) => {\n    dispatch(filterContacts(event.target.value));\n  }\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        name=\"filter\"\n        value = {filterValue}\n        onChange={handleFilter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        />\n    </Label>\n  )\n}","import styled from 'styled-components';\n\nexport const MainBlock = styled.div`\n  background-color: var(--light-gray);\n  display: flex;\n  flex-direction: column;\n  width: 480px;\n  padding: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  border-bottom: 8px solid var(--light-green);\n  border-radius: 10px;\n\n  @media screen and (max-width: 480px) {\n    width: 320px;\n    padding: 15px;\n  }\n`;\n\nexport const Header1 = styled.h1`\n  text-align: center;\n`;\n\nexport const Header2 = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n`;","import { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { fetchContacts } from \"../redux/contacts/operations\";\nimport { MainBlock, Header1, Header2 } from './Contacts.styled';\n\nimport {  getIsLoading } from \"../redux/contacts/selectors\";\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport {ThreeDots} from '../Loader/Loader';\n\nexport default function Contacts() {\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);  \n\n  useEffect(() => { \n    dispatch(fetchContacts()); \n  }, [dispatch]);\n\n  return (\n    <div       \n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        color: '#010101',\n        paddingTop: '80px',\n      }}>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n        <MainBlock>\n          <Header1>Phonebook</Header1>\n          <ContactForm />\n          <div>{isLoading && <ThreeDots />}</div>\n          <Header2>Contacts</Header2>\n          <Filter />\n          <ContactList />\n        </MainBlock>\n    </div>\n  );\n}","import { ThreeDots } from 'react-loader-spinner';\n<ThreeDots \nheight=\"80\" \nwidth=\"80\" \nradius=\"9\"\ncolor=\"#fa0404\" \nariaLabel=\"three-dots-loading\"\nwrapperStyle={{margin: '0 auto'}}\nwrapperClassName=\"\"\nvisible={true}\n/>\n\nexport {ThreeDots}"],"names":["List","styled","Item","Info","Button","getContacts","state","contacts","items","getIsLoading","isLoading","getFilterValue","filter","ContactList","dispatch","useDispatch","useSelector","filterValue","visibleContact","normalizedFilter","toLowerCase","contact","name","includes","getVisibleContact","map","_id","number","onClick","deleteContact","Form","Label","Input","ContactForm","onSubmit","event","preventDefault","form","target","contactsValue","elements","value","length","addContact","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","reset","type","placeholder","pattern","title","required","Filter","onChange","filterContacts","MainBlock","Header1","Header2","Contacts","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","color","paddingTop","Helmet"],"sourceRoot":""}